<project default="compile">
  <!-- build.xml for github.com/UCSB-CS56-Projects/cs56-games-rock-paper-scissors
  original authors: Dennis Huynh and Aki Stankoski
  updated Jordan Nguyen & Brandon Wicka for W15
  updated Nicole Moghaddas & Laura Anthony for W16 -->

	<property environment="env"/> <!-- load the environment variables -->
  	<property name="webRoot" 	value="${env.HOME}/public_html/cs56"/>
  	<property name="webBaseURL" 	value="http://www.cs.ucsb.edu/~${env.USER}/cs56"/>

	<property name="mainClass" value="edu.ucsb.cs56.projects.games.rock_paper_scissors.RunGame" />
  	<property name="project" 	value="cs56-games-rock-paper-scissors"/>

  	<property name="javadocDest" 	value="${webRoot}/${project}/javadoc" />
  	<property name="javadocURL" 	value="${webBaseURL}/${project}/javadoc"/>

	<property name="public_javadoc_path" location="../gh-pages/cs56-games-rock-paper-scissors/javadoc"/>

	<path id="project.class.path">
		<pathelement location="build"/>
		<pathelement location="lib/junit-4.8.2.jar"/>
	</path>

<target name="compile" description="compile my code">
  	<mkdir dir="build" />
    	<javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">
			<classpath refid="project.class.path" />
   	</javac>
</target>

<target name="run" depends="compile" description="run program">
  	<java classname="${mainClass}" classpath="build" fork="true" />
</target>

<target name="clean" description="delete unnecessary files and directories">
	<delete dir="build" 	quiet="true" />
    	<delete dir= "javadoc" 	quiet="true" />
</target>

<target name="javadoc" depends="compile" description="put documentation of the code on the web">                                                      	<delete dir="javadoc" quiet="true" />
   	<javadoc  destdir="javadoc" author="true" version="true" use="true" >
      		<fileset dir="src" includes="**/*.java"/>
		<classpath refid="project.class.path" />
   	</javadoc>

   <!-- delete the old javadoc -->
   <delete quiet="true">
	   <fileset dir="${public_javadoc_path}" />
   </delete>
   <mkdir dir="${public_javadoc_path}" />
   <copy todir="${public_javadoc_path}">
	   <fileset dir="javadoc" />
   </copy>
   <echo>
	   javadoc copied to ${public_javadoc_path}/index.html 
	   TO PUBLISH: cd into that repo, then git add javadoc;
	   git commit -m "update javadoc"; git push origin master
   </echo>


</target>

<target name="jar" depends="compile" description="create a jar file">
  <jar destfile="lib/build.jar">
    <fileset dir="build/edu/ucsb/cs56/projects/games/rock_paper_scissors" includes="*.class"/>
    <manifest>
<attribute name="Main-Class" value="cs56-games-rock-paper-scissors"/>
    </manifest>
  </jar>
</target>

<target name="test" depends="compile" description="perform unit testing on the code">
  	<junit haltonerror="no" haltonfailure="no">
		<classpath refid="project.class.path" />

       	<batchtest fork="yes">
      		<fileset dir="src">
       			<!-- this will pick up every class with a name ending in Test -->
        		<include name="**/*Test.java"/>
       		</fileset>
	</batchtest>
	<formatter type="plain" usefile="false" />
  	</junit>
</target>


</project>
